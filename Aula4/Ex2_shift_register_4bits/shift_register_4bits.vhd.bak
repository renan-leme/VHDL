--Shift Register usando usando for loop
--Autor: Luiz Cesar
--Data 03 10 2020

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

--entidade
entity sht_reg is
	Port (
			clk: in std_logic;
			rst: in std_logic;	
			en: in std_logic;	
			d: in std_logic;
			data_out_a:out std_logic_vector(3 downto 0);
			data_out_b:out std_logic_vector(3 downto 0);
			data_out_c:out std_logic_vector(3 downto 0)
			);
			
end sht_reg;

--arquitetura
Architecture behavior of sht_reg is

--sinais
signal q_a: std_logic_vector (3 downto 0);
signal q_b: std_logic_vector (3 downto 0);
signal q_c: std_logic_vector (3 downto 0);

--processo
begin
	process(clk, rst)
		begin
			if rst = '1' then
				q_a <= (others=>'0');--x"00"; --x na frende do vetor
				q_b <= (others=>'0'); --jeito de zerar algo sem saber tamanho.
				q_c <= (others=>'0');
			elsif clk'event and clk = '1' then
				if en = '1' then
						--jeito 1
					q_a(0) <= d;
					q_a(3 downto 1) <= q_a(2 downto 0);
						--jeito 2: apimentado. igual o jeito 1, mas com uma
						--constante para o tamanho.
					q_b(0) <= d;
					q_b(q_b'high downto 1) <= q_b(q_a'high-1 downto 0);
						--jeito 3 -- nao rodou desta forma.
					--q_c <= q_c(q_c'high-2 downto 0) & d;
				end if;
			end if;
	end process;

--saida	
data_out_a <= q_a;
data_out_b <= q_b;
data_out_c <= q_c;

end behavior;